# -*- coding: utf-8 -*-
"""
@author: liuyang
@software: PyCharm
@file: 换位置.py
@time: 2022/10/10 15:40
"""
n = 4
'''
1) 1个人，不需要交换;
2) 2个人，交换一次即可，12->21;
3) 3个人以上，可以将其分成2拨人，每一拨人完全逆序过来，就可以完成圆环次序交换，即1234->2143（2次）或1234->1432（3次）;
观察发现，两拨人人数越接近，所需要的交换次数总和越小，计算到(n//2+1)个人逆序所需要的次数即可
'''
# nums[i]表示i个人完成逆序交换所需要的次数
nums = [0, 0, 1]
# 则nums[i]等于第i个人与前面i-1个人每人交换一次
for i in range(3, n // 2 + 2):
    nums.append(nums[i - 1] + i - 1)
# 打印计算结果
print(nums[n // 2] + nums[n - n // 2])

